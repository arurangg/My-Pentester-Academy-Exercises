#!/usr/bin/env python

import SocketServer
import threading
import sys
from signal import SIGINT, signal

def sig_handler(signal_number, interrupted_stack_frame):
        print "\nSIGINT received..Bye Bye"
	sys.exit(0)

class ThreadedEchoHandler(SocketServer.StreamRequestHandler):
	def handle(self):
		print "Connected to {0}".format(self.client_address)
		data = "tmp"
		while len(data):
			data = self.request.recv(1024)
			print "Received data: {0}".format(data)
			self.request.send(data)
		print "Client {0} disconnected.".format(self.client_address)

if len(sys.argv) < 2:
	port = 8000
else:
	port = int(sys.argv[1])

signal(SIGINT,sig_handler)

tcpServer = SocketServer.ThreadingTCPServer(('',port),ThreadedEchoHandler)
tcpServer.allow_reuse_address = True
tcpServer.serve_forever()

